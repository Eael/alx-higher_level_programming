================
0-add_integer.py
================

This module defines an integer addition function "add_integer(a, b=98)".

Usage
=====

"add_integer(a, b=98)" returns the addition of two arguments a and b.
However b is set to a default of 98.

::

	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(1, 2)
	3

::

	>>> add_integer(100, -2)
	98

The function works with floats
Floats are casted to integers first
Hence floats and non-floats can be combined

::

	>>> add_integer(100.3, -2)
	98

b can be left out because its value is default

::

	>>> add_integer(2)
	100

Non-Numbers
===========

"add_integer(a, b=98)" expects its arguments to be an integer or float
It raises a TypeError when either one is neither an integer or float

::

	>>> add_integer(4, "School")
	Traceback (most recent call last):
	TypeError: b must be an integer

::

	>>> add_integer(None)
	Traceback (most recent call last):
	TypeError: a must be an integer

If both arguments are non-integers and non-floats, a TypeError message is only
printed for the first argument.

The function fails if infinity is provided as argument

::

	>>> add_integer(float('inf'))
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

